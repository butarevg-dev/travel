version: "3.9"
services:
  api:
    build: .
    container_name: saransk-api
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - minio
    ports:
      - "8000:8000"
    volumes:
      - ./app:/app/app:rw
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]

  db:
    image: postgres:16-alpine
    container_name: saransk-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    container_name: saransk-redis
    ports:
      - "6379:6379"
    command: ["redis-server", "--save", "", "--appendonly", "no"]

  minio:
    image: minio/minio:RELEASE.2024-11-07T00-52-20Z
    container_name: saransk-minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: ["server", "/data", "--console-address", ":9001"]
    ports:
      - "9000:9000" # S3 API
      - "9001:9001" # Console UI
    volumes:
      - minio-data:/data

  minio-setup:
    image: minio/mc:RELEASE.2024-10-02T09-05-50Z
    container_name: saransk-minio-setup
    depends_on:
      - minio
    entrypoint: ["/bin/sh", "-c"]
    command: >-
      "mc alias set local http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD} &&
       mc mb -p local/${S3_BUCKET} || true &&
       mc anonymous set public local/${S3_BUCKET} || true &&
       echo 'MinIO ready'"
    restart: "on-failure:3"

volumes:
  pgdata: {}
  minio-data: {}

