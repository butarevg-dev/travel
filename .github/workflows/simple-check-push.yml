name: Simple Project Check (Push)

on:
  push:
    branches: [ main, develop, cursor/investigate-expired-development-agent-status-b61b ]
  workflow_dispatch:

permissions:
  contents: read
  issues: write

jobs:
  simple-validation:
    name: Simple Project Validation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Check project structure
      run: |
        echo "üöÄ Checking project structure..."
        
        # Check if ios directory exists
        if [ ! -d "ios" ]; then
          echo "‚ùå ios directory not found"
          exit 1
        fi
        echo "‚úÖ ios directory found"
        
        # Count Swift files
        SWIFT_COUNT=$(find ios/ -name "*.swift" | wc -l)
        echo "üì± Swift files found: $SWIFT_COUNT"
        
        if [ $SWIFT_COUNT -lt 40 ]; then
          echo "‚ö†Ô∏è Expected at least 40 Swift files, found $SWIFT_COUNT"
        else
          echo "‚úÖ Swift files count is good"
        fi
        
        # Count documentation files
        DOC_COUNT=$(find . -name "*.md" | wc -l)
        echo "üìö Documentation files found: $DOC_COUNT"
        
        if [ $DOC_COUNT -lt 30 ]; then
          echo "‚ö†Ô∏è Expected at least 30 markdown files, found $DOC_COUNT"
        else
          echo "‚úÖ Documentation count is good"
        fi
        
        # Check key files
        KEY_FILES=(
          "ios/App.swift"
          "ios/Models/Models.swift"
          "ios/Services/FirestoreService.swift"
          "ios/Screens/MapScreen.swift"
          "content/poi.json"
          "content/routes.json"
          "README.md"
          "DEVELOPER_GUIDE.md"
          "FUNCTIONALITY_CHECKLIST.md"
        )
        
        echo "üîç Checking key files..."
        for file in "${KEY_FILES[@]}"; do
          if [ -f "$file" ]; then
            echo "‚úÖ $file"
          else
            echo "‚ùå $file (missing)"
            exit 1
          fi
        done
        
        # Check JSON validity
        echo "üîç Validating JSON files..."
        if python3 -m json.tool content/poi.json > /dev/null 2>&1; then
          echo "‚úÖ poi.json is valid"
        else
          echo "‚ùå poi.json is invalid"
          exit 1
        fi
        
        if python3 -m json.tool content/routes.json > /dev/null 2>&1; then
          echo "‚úÖ routes.json is valid"
        else
          echo "‚ùå routes.json is invalid"
          exit 1
        fi
        
        echo "üéâ All checks passed!"
        
    - name: Generate summary
      run: |
        echo "# üìä Simple Project Check Summary" > SIMPLE_CHECK_SUMMARY.md
        echo "" >> SIMPLE_CHECK_SUMMARY.md
        echo "## ‚úÖ Status: PASSED" >> SIMPLE_CHECK_SUMMARY.md
        echo "" >> SIMPLE_CHECK_SUMMARY.md
        echo "### File Counts:" >> SIMPLE_CHECK_SUMMARY.md
        echo "- Swift files: $(find ios/ -name "*.swift" | wc -l)" >> SIMPLE_CHECK_SUMMARY.md
        echo "- Documentation: $(find . -name "*.md" | wc -l)" >> SIMPLE_CHECK_SUMMARY.md
        echo "- JSON files: $(find . -name "*.json" | wc -l)" >> SIMPLE_CHECK_SUMMARY.md
        echo "" >> SIMPLE_CHECK_SUMMARY.md
        echo "### Key Components:" >> SIMPLE_CHECK_SUMMARY.md
        echo "- ‚úÖ iOS App structure" >> SIMPLE_CHECK_SUMMARY.md
        echo "- ‚úÖ Models, Services, Screens" >> SIMPLE_CHECK_SUMMARY.md
        echo "- ‚úÖ Content files (JSON)" >> SIMPLE_CHECK_SUMMARY.md
        echo "- ‚úÖ Documentation" >> SIMPLE_CHECK_SUMMARY.md
        echo "" >> SIMPLE_CHECK_SUMMARY.md
        echo "### Next Steps:" >> SIMPLE_CHECK_SUMMARY.md
        echo "1. Download files using \`./setup-xcode-project.sh\`" >> SIMPLE_CHECK_SUMMARY.md
        echo "2. Create Xcode project" >> SIMPLE_CHECK_SUMMARY.md
        echo "3. Add files to project" >> SIMPLE_CHECK_SUMMARY.md
        echo "4. Configure Firebase" >> SIMPLE_CHECK_SUMMARY.md
        echo "5. Run in simulator" >> SIMPLE_CHECK_SUMMARY.md
        
        cat SIMPLE_CHECK_SUMMARY.md
        
    - name: Upload summary
      uses: actions/upload-artifact@v4
      with:
        name: simple-check-summary
        path: SIMPLE_CHECK_SUMMARY.md

  create-issue:
    name: Create Issue with Results
    runs-on: ubuntu-latest
    needs: simple-validation
    if: github.event_name == 'push'
    
    steps:
    - name: Download summary
      uses: actions/download-artifact@v4
      with:
        name: simple-check-summary
        
    - name: Create Issue
      uses: actions/github-script@v7
      with:
        script: |
          try {
            const fs = require('fs');
            const summary = fs.readFileSync('SIMPLE_CHECK_SUMMARY.md', 'utf8');
            
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `üìä Project Check Results - ${new Date().toLocaleDateString()}`,
              body: `## üìä Simple Project Check Summary\n\n${summary}\n\nüéâ Project is ready for Xcode development!\n\n**Branch:** ${context.ref}\n**Commit:** ${context.sha.substring(0, 7)}`,
              labels: ['project-check', 'success']
            });
            
            console.log('‚úÖ Issue created successfully:', issue.data.html_url);
          } catch (error) {
            console.log('‚ö†Ô∏è Could not create issue:', error.message);
            console.log('üìä Summary content:');
            console.log(fs.readFileSync('SIMPLE_CHECK_SUMMARY.md', 'utf8'));
          }