name: Quick Project Check

on:
  push:
    branches: [ main, develop, cursor/investigate-expired-development-agent-status-b61b ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch: # Allows manual trigger

jobs:
  quick-validation:
    name: Quick Project Validation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Validate Swift files count
      run: |
        SWIFT_COUNT=$(find ios/ -name "*.swift" | wc -l)
        echo "Found $SWIFT_COUNT Swift files"
        if [ $SWIFT_COUNT -lt 40 ]; then
          echo "❌ Expected at least 40 Swift files, found $SWIFT_COUNT"
          exit 1
        fi
        echo "✅ Swift files count: $SWIFT_COUNT"
        
    - name: Validate documentation
      run: |
        DOC_COUNT=$(find . -name "*.md" | wc -l)
        echo "Found $DOC_COUNT documentation files"
        if [ $DOC_COUNT -lt 30 ]; then
          echo "❌ Expected at least 30 markdown files, found $DOC_COUNT"
          exit 1
        fi
        echo "✅ Documentation count: $DOC_COUNT"
        
    - name: Check required files
      run: |
        REQUIRED_FILES=(
          "ios/App.swift"
          "ios/Models/Models.swift"
          "ios/Services/FirestoreService.swift"
          "ios/Screens/MapScreen.swift"
          "content/poi.json"
          "content/routes.json"
          "README.md"
          "DEVELOPER_GUIDE.md"
          "FUNCTIONALITY_CHECKLIST.md"
        )
        
        for file in "${REQUIRED_FILES[@]}"; do
          if [ ! -f "$file" ]; then
            echo "❌ Missing required file: $file"
            exit 1
          fi
          echo "✅ Found: $file"
        done
        
    - name: Validate JSON files
      run: |
        echo "Validating content/poi.json..."
        python3 -m json.tool content/poi.json > /dev/null
        echo "✅ poi.json is valid JSON"
        
        echo "Validating content/routes.json..."
        python3 -m json.tool content/routes.json > /dev/null
        echo "✅ routes.json is valid JSON"
        
    - name: Check project structure
      run: |
        echo "📁 Project Structure:"
        find . -type d -maxdepth 3 | sort
        
    - name: Generate quick report
      run: |
        echo "# 📊 Quick Project Validation Report" > QUICK_VALIDATION_REPORT.md
        echo "" >> QUICK_VALIDATION_REPORT.md
        echo "## 📁 File Statistics" >> QUICK_VALIDATION_REPORT.md
        echo "" >> QUICK_VALIDATION_REPORT.md
        
        SWIFT_COUNT=$(find ios/ -name "*.swift" | wc -l)
        DOC_COUNT=$(find . -name "*.md" | wc -l)
        JSON_COUNT=$(find . -name "*.json" | wc -l)
        
        echo "- Swift files: $SWIFT_COUNT" >> QUICK_VALIDATION_REPORT.md
        echo "- Documentation files: $DOC_COUNT" >> QUICK_VALIDATION_REPORT.md
        echo "- JSON files: $JSON_COUNT" >> QUICK_VALIDATION_REPORT.md
        echo "" >> QUICK_VALIDATION_REPORT.md
        
        echo "## 📱 iOS Components" >> QUICK_VALIDATION_REPORT.md
        echo "" >> QUICK_VALIDATION_REPORT.md
        echo "### Models:" >> QUICK_VALIDATION_REPORT.md
        find ios/Models -name "*.swift" -exec basename {} \; >> QUICK_VALIDATION_REPORT.md
        echo "" >> QUICK_VALIDATION_REPORT.md
        
        echo "### Services:" >> QUICK_VALIDATION_REPORT.md
        find ios/Services -name "*.swift" -exec basename {} \; >> QUICK_VALIDATION_REPORT.md
        echo "" >> QUICK_VALIDATION_REPORT.md
        
        echo "### Screens:" >> QUICK_VALIDATION_REPORT.md
        find ios/Screens -name "*.swift" -exec basename {} \; >> QUICK_VALIDATION_REPORT.md
        echo "" >> QUICK_VALIDATION_REPORT.md
        
        echo "## ✅ Validation Status" >> QUICK_VALIDATION_REPORT.md
        echo "" >> QUICK_VALIDATION_REPORT.md
        echo "- Project structure: ✅ Valid" >> QUICK_VALIDATION_REPORT.md
        echo "- Documentation: ✅ Complete" >> QUICK_VALIDATION_REPORT.md
        echo "- JSON files: ✅ Valid" >> QUICK_VALIDATION_REPORT.md
        echo "- Swift files: ✅ Present" >> QUICK_VALIDATION_REPORT.md
        
        cat QUICK_VALIDATION_REPORT.md
        
    - name: Upload validation report
      uses: actions/upload-artifact@v4
      with:
        name: quick-validation-report
        path: QUICK_VALIDATION_REPORT.md

  comment-quick-report:
    name: Comment Quick Report on PR
    runs-on: ubuntu-latest
    needs: quick-validation
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Download validation report
      uses: actions/download-artifact@v4
      with:
        name: quick-validation-report
        
    - name: Comment on PR
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const report = fs.readFileSync('QUICK_VALIDATION_REPORT.md', 'utf8');
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## 📊 Quick Project Validation Report\n\n${report}\n\n✅ All checks passed!`
          });